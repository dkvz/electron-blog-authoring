/*
* General styles:
*/
html,
body {
  box-sizing: border-box;
}

.app-layout {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.full-section {
  flex: 1;
  display: flex;
  flex-direction: column;
}

/*
* End General styles
*/

/*
* Accordion component (+ form-headline):
*/
.Accordion,
.form-headline {
  background-color: #eee;
  color: #444;
  cursor: pointer;
  padding: 10px;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  /*font-size: 15px;*/
  transition: 0.4s;
}

.Accordion-active,
.Accordion:hover {
  background-color: #ccc;
}

.Accordion:after {
  content: '\002B';
  color: #777;
  font-weight: bold;
  float: right;
  margin-left: 5px;
}

.Accordion-active:after {
  content: "\2212";
}

.Accordion-panel {
  background-color: #eee;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.2s ease-out;
}

/*
* End Accordion
*/

/*
* Modal component styles:
*/
.Modal {
  display: none;
  /* Hidden by default */
  position: fixed;
  /* Stay in place */
  z-index: 1;
  /* Sit on top */
  padding-top: 50px;
  /* Location of the box */
  left: 0;
  top: 0;
  width: 100%;
  /* Full width */
  height: 100%;
  /* Full height */
  overflow: auto;
  /* Enable scroll if needed */
  background-color: rgb(0, 0, 0);
  /* Fallback color */
  background-color: rgba(0, 0, 0, 0.4);
  /* Black w/ opacity */
}

.Modal-content {
  position: relative;
  background-color: #fefefe;
  margin: auto;
  padding: 0;
  border: 1px solid #888;
  width: 80%;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  animation-name: animatetop;
  animation-duration: 0.4s
}

@keyframes animatetop {
  from {
    top: -300px;
    opacity: 0
  }

  to {
    top: 0;
    opacity: 1
  }
}

.Modal-close {
  color: #000;
  float: right;
  font-size: 1.2em;
  font-weight: bold;
  padding-right: 10px;
}

.Modal-close:hover,
.Modal-close:focus {
  color: #fefefe;
  text-decoration: none;
  cursor: pointer;
}

.Modal-body {
  padding: 2px 16px;
}

.Modal-footer {
  padding: 4px 4px;
}

/*
* End Modal component styles
*/

.SearchBox {
  position: fixed;
  top: 0;
  right: 0;
  border: 1px solid #333;
  padding: 2px 6px 2px 6px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #ccc;
}

/* Let's have faith in the input style
  from Photon. */
/*.SearchBox input[type="text"] {
  font-family: sans-serif;
  background-color: #333;
  color: #ebebeb;
  border: 1px solid silver;
  width: 150px;
  padding: 4px;
}*/

.SearchBox input[type="text"] {
  width: 150px;
}

.SearchBox a {
  text-decoration: none;
  font-weight: bolder;
  font-size: 1.3em;
  margin-left: 5px;
  color: #333;
  cursor: pointer;
}

.SearchBox input[type="checkbox"] {
  display: none;
}

.SearchBox .chkbox-wrapper {
  color: #aaa;
}

.SearchBox .chkbox-wrapper label {
  cursor: pointer;
  /* Required to not have the label
  text get selected when we double 
  click: */
  user-select: none;
  /* I need the two following styles
  to reset what Photon is doing to
  label: */
  margin: 0;
  display: inline;
}

.SearchBox .chkbox-wrapper label:not(.checked) {
  border: 2px solid transparent;
}

.SearchBox .checked {
  color: #333;
  border: 2px solid #333;
}

/* Tags component */
.Tags {
  display: flex;
}

.Tags select {
  flex: 2;
  min-height: 300px;
}

.Tags * {
  cursor: inherit;
}

.Tags .Tags-buttons {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
  flex: 1;
}

.Tags .Tags-buttons button {
  width: 100%;
}

textarea,
input[type="text"] {
  cursor: auto;
  font-family: 'Noto Sans Mono', 'Cascadia Code', 'Fira Code', sans-serif;
}